发生死锁的条件:
1.互斥条件,任务使用的资源中至少有一个是不能共享的.这里,一根Chopstick一次就只能被一个Philosopher使用.

2.至少有一个任务它必须持有一个资源且正在等候获取一个当前被别的任务持有的资源.也就是说,要发生死锁,Philosopher必须拿着一根Chopstick并且等待另一根.

3.资源不能被任务抢占,任务必须把资源释放当作普通事件.Philosopher很有礼貌,他们不会从其他Philosopher那里抢Chopstick.

4.必须有循环等待,这时,一个任务等待其他任务所持有的资源,后者又在等待另一个任务所持有的资源,这样一直下去,直到有一个任务在等待第一个任务所持有的资源,
使得大家都被锁住.在DeadlockingDiningPhilosophers.Java中,因为每个Philosopher都视图先得到右边的Chopstick,然后得到左边的Chopstick,
所有发生了循环等待.